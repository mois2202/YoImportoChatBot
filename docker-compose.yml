services:
  postgres:
    image: postgres:17
    env_file:
      - ./.env
    container_name: ChatBot-DB-Container
    environment:
      POSTGRES_DB: ${DB_CONTAINER_NAME}
      POSTGRES_USER: ${DB_CONTAINER_USERNAME}
      POSTGRES_PASSWORD: ${DB_CONTAINER_PASSWORD}
    ports:
      - "${DB_LOCAL_PORT}:${DB_CONTAINER_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Otros/RespaldosDB/20241103.sql:/docker-entrypoint-initdb.d/20241103.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_CONTAINER_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadminChatbot
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_LOCAL_PORT}:${PGADMIN_CONTAINER_PORT}"
    networks:
      - app-network

  app:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${APP_LOCAL_PORT}:${APP_CONTAINER_PORT}"
    environment:
      # Aqu√≠ puedes pasar variables de entorno necesarias para tu app
      DATABASE_HOST: postgres
      DATABASE_USER: ${DB_CONTAINER_USERNAME}
      DATABASE_PASSWORD: ${DB_CONTAINER_PASSWORD}
      DATABASE_NAME: ${DB_CONTAINER_NAME}
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network: